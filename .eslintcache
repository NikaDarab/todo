[{"/Users/nikadarab/dev/brivity/todo/src/index.js":"1","/Users/nikadarab/dev/brivity/todo/src/App.js":"2","/Users/nikadarab/dev/brivity/todo/src/reportWebVitals.js":"3","/Users/nikadarab/dev/brivity/todo/src/contexts/Auth.js":"4","/Users/nikadarab/dev/brivity/todo/src/contexts/Task.js":"5","/Users/nikadarab/dev/brivity/todo/src/services/firebase.js":"6","/Users/nikadarab/dev/brivity/todo/src/components/TaskList.jsx":"7","/Users/nikadarab/dev/brivity/todo/src/components/Login.jsx":"8","/Users/nikadarab/dev/brivity/todo/src/components/Header.js/Header.js":"9","/Users/nikadarab/dev/brivity/todo/src/App.test.js":"10","/Users/nikadarab/dev/brivity/todo/src/components/Footer/Footer.js":"11"},{"size":726,"mtime":1617315963062,"results":"12","hashOfConfig":"13"},{"size":648,"mtime":1617325001668,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1617222642729,"results":"15","hashOfConfig":"13"},{"size":1160,"mtime":1617227400950,"results":"16","hashOfConfig":"13"},{"size":1525,"mtime":1617254649539,"results":"17","hashOfConfig":"13"},{"size":2814,"mtime":1617325108667,"results":"18","hashOfConfig":"13"},{"size":4577,"mtime":1617316927230,"results":"19","hashOfConfig":"13"},{"size":1132,"mtime":1617317592504,"results":"20","hashOfConfig":"13"},{"size":446,"mtime":1617315900575,"results":"21","hashOfConfig":"13"},{"size":246,"mtime":1617222642727,"results":"22","hashOfConfig":"13"},{"size":207,"mtime":1617316907647,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"6d83a0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/nikadarab/dev/brivity/todo/src/index.js",[],["48","49"],"/Users/nikadarab/dev/brivity/todo/src/App.js",["50"],"/Users/nikadarab/dev/brivity/todo/src/reportWebVitals.js",[],"/Users/nikadarab/dev/brivity/todo/src/contexts/Auth.js",[],"/Users/nikadarab/dev/brivity/todo/src/contexts/Task.js",[],"/Users/nikadarab/dev/brivity/todo/src/services/firebase.js",["51","52","53"],"/Users/nikadarab/dev/brivity/todo/src/components/TaskList.jsx",["54"],"import React, { useState, useContext, useEffect } from \"react\";\nimport TaskContext from \"../contexts/Task\";\nimport AuthContext from \"../contexts/Auth\";\n\nfunction TaskList() {\n  const { user } = useContext(AuthContext);\n  let emptyTask = {\n    category: \"\",\n    name: \"\",\n    completed: false,\n    uid: user.uid,\n  };\n  const [newTask, setNewTask] = useState(false);\n  const [showList, setList] = useState(false);\n  const [task, setTask] = useState(emptyTask);\n  let { tasks, addTask, updateTask, getTasks, deleteTask } = useContext(\n    TaskContext\n  );\n\n  useEffect(() => {\n    getTasks(user.uid);\n  }, [user]);\n\n  const updateCompleted = (task) => {\n    task.task.completed = !task.task.completed;\n    updateTask(task);\n  };\n  const handleDelete = (taskId) => {\n    let foundTask = tasks.find((task) => task.id === taskId);\n    // console.log(deletedTask);\n    deleteTask(foundTask);\n  };\n  const saveTask = () => {\n    addTask(task).then(() => cancelTask(/*complete the cancel task todo*/));\n  };\n\n  const cancelTask = () => {\n    //todo: reset the task state and hide the form\n    setNewTask(!newTask);\n    // console.log(task);\n  };\n  // todo: update the task state with these variables\n  const handleCategoryChange = (e) => {\n    const { value } = e.target;\n    let updateCateogryEmptyTask = {\n      category: value,\n      name: task.name,\n      completed: false,\n      uid: user.uid,\n    };\n    setTask(updateCateogryEmptyTask);\n    // console.log(task);\n  };\n  const handleNameChange = (e) => {\n    const { value } = e.target;\n    let updateNameEmptyTask = {\n      category: task.category,\n      name: value,\n      completed: false,\n      uid: user.uid,\n    };\n    setTask(updateNameEmptyTask);\n    // console.log(task);\n  };\n\n  return (\n    <div className=\"TaskList\">\n      <div className=\"add-btn\">\n        <div\n          style={{ padding: \"0 100px\" }}\n          onClick={() => setNewTask(!newTask)}\n        >\n          {!newTask ? (\n            <i className=\"fas fa-plus fa-2x add\"></i>\n          ) : (\n            <i className=\"fas fa-times fa-2x\"></i>\n          )}\n        </div>\n        <div style={{ padding: \"0 100px\" }} onClick={() => setList(!showList)}>\n          {!showList ? (\n            <i className=\"fas fa-eye fa-2x add\"></i>\n          ) : (\n            <i className=\"fas fa-eye-slash fa-2x\"></i>\n          )}\n        </div>\n      </div>\n\n      <div>\n        {newTask && (\n          <div className=\"form-inline\">\n            <label htmlFor=\"category\">category</label>\n            <input\n              type=\"text\"\n              value={task.category}\n              onChange={handleCategoryChange}\n              name=\"category\"\n              required\n            />\n            <label htmlFor=\"name\">name</label>\n            <input\n              type=\"text\"\n              value={task.name}\n              onChange={handleNameChange}\n              name=\"name\"\n              required\n            />\n            <button\n              className=\"button-save\"\n              disabled={\n                task.name.length === 0 || task.category.length === 0\n                  ? true\n                  : false\n              }\n              onClick={saveTask}\n            >\n              save\n            </button>{\" \"}\n            <br />\n            <button className=\"button-delete\" onClick={cancelTask}>\n              cancel\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"table\">\n        {!showList && (\n          <table>\n            <>\n              <thead>\n                <tr>\n                  <th>Category</th>\n                  <th>Name</th>\n                  <th>Completed</th>\n                </tr>\n              </thead>\n            </>\n            <tbody>\n              {tasks.map((task) => (\n                <tr key={task.id}>\n                  <td>{task.task.category}</td>\n                  <td>{task.task.name}</td>\n                  <td>\n                    <input\n                      style={{ margin: \"12px 0\" }}\n                      type=\"checkbox\"\n                      checked={task.task.completed}\n                      onChange={() => updateCompleted(task)}\n                    />\n                  </td>\n                  <td>\n                    <div onClick={() => handleDelete(task.id)}>\n                      <i className=\"fas fa-trash\"></i>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n\n      {/* <button onClick={logout}>Logout</button> */}\n    </div>\n  );\n}\n\nexport default TaskList;\n","/Users/nikadarab/dev/brivity/todo/src/components/Login.jsx",[],"/Users/nikadarab/dev/brivity/todo/src/components/Header.js/Header.js",[],"/Users/nikadarab/dev/brivity/todo/src/App.test.js",[],"/Users/nikadarab/dev/brivity/todo/src/components/Footer/Footer.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":12,"column":35,"nodeType":"61","endLine":12,"endColumn":37,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":16},{"ruleId":"63","severity":1,"message":"67","line":31,"column":13,"nodeType":"65","messageId":"66","endLine":31,"endColumn":25},{"ruleId":"63","severity":1,"message":"67","line":47,"column":13,"nodeType":"65","messageId":"66","endLine":47,"endColumn":25},{"ruleId":"59","severity":1,"message":"68","line":22,"column":6,"nodeType":"61","endLine":22,"endColumn":12,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkForUser'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-unused-vars","'apiKey' is defined but never used.","Identifier","unusedVar","'errorMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTasks'. Either include it or remove the dependency array.",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [checkForUser]",{"range":"78","text":"79"},"Update the dependencies array to be: [getTasks, user]",{"range":"80","text":"81"},[420,422],"[checkForUser]",[604,610],"[getTasks, user]"]